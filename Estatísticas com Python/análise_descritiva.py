# -*- coding: utf-8 -*-
"""Análise_Descritiva.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DKYKCyN6bgdQjKPs2J5N8QAxaxzAOcvt

***
# <font color=green size=10>CURSO DE ESTATÍSTICA - PARTE 1</font>
***

## Trabalho de Análise Descritiva de um Conjunto de Dados

Utilizando os conhecimentos adquiridos em nosso treinamento realize uma análise descritiva básica de um conjunto de dados retirados da Pesquisa Nacional por Amostra de Domicílios - 2015 do IBGE. 

Vamos construir histogramas, calcular e avaliar medidas de tendência central, medidas separatrizes e de dispersão dos dados.

Siga o roteiro proposto e vá completando as células vazias. Procure pensar em mais informações interessantes que podem ser exploradas em nosso dataset.

# <font color=green>DATASET DO PROJETO</font>
***

### Pesquisa Nacional por Amostra de Domicílios - 2015

A <b>Pesquisa Nacional por Amostra de Domicílios - PNAD</b> investiga anualmente, de forma permanente, características gerais da população, de educação, trabalho, rendimento e habitação e outras, com periodicidade variável, de acordo com as necessidades de informação para o país, como as características sobre migração, fecundidade, nupcialidade, saúde, segurança alimentar, entre outros temas. O levantamento dessas estatísticas constitui, ao longo dos 49 anos de realização da pesquisa, um importante instrumento para formulação, validação e avaliação de políticas orientadas para o desenvolvimento socioeconômico e a melhoria das condições de vida no Brasil.

### Fonte dos Dados

https://ww2.ibge.gov.br/home/estatistica/populacao/trabalhoerendimento/pnad2015/microdados.shtm

### Variáveis utilizadas

> ### Renda
> ***

Rendimento mensal do trabalho principal para pessoas de 10 anos ou mais de idade.

> ### Idade
> ***

Idade do morador na data de referência em anos.

> ### Altura (elaboração própria)
> ***

Altura do morador em metros.

> ### UF
> ***

|Código|Descrição|
|---|---|
|11|Rondônia|
|12|Acre|
|13|Amazonas|
|14|Roraima|
|15|Pará|
|16|Amapá|
|17|Tocantins|
|21|Maranhão|
|22|Piauí|
|23|Ceará|
|24|Rio Grande do Norte|
|25|Paraíba|
|26|Pernambuco|
|27|Alagoas|
|28|Sergipe|
|29|Bahia|
|31|Minas Gerais|
|32|Espírito Santo|
|33|Rio de Janeiro|
|35|São Paulo|
|41|Paraná|
|42|Santa Catarina|
|43|Rio Grande do Sul|
|50|Mato Grosso do Sul|
|51|Mato Grosso|
|52|Goiás|
|53|Distrito Federal|

> ### Sexo	
> ***

|Código|Descrição|
|---|---|
|0|Masculino|
|1|Feminino|

> ### Anos de Estudo
> ***

|Código|Descrição|
|---|---|
|1|Sem instrução e menos de 1 ano|
|2|1 ano|
|3|2 anos|
|4|3 anos|
|5|4 anos|
|6|5 anos|
|7|6 anos|
|8|7 anos|
|9|8 anos|
|10|9 anos|
|11|10 anos|
|12|11 anos|
|13|12 anos|
|14|13 anos|
|15|14 anos|
|16|15 anos ou mais|
|17|Não determinados| 
||Não aplicável|

> ### Cor
> ***

|Código|Descrição|
|---|---|
|0|Indígena|
|2|Branca|
|4|Preta|
|6|Amarela|
|8|Parda|
|9|Sem declaração|

#### <font color='red'>Observação</font>
***
> Os seguintes tratamentos foram realizados nos dados originais:
> 1. Foram eliminados os registros onde a <b>Renda</b> era inválida (999 999 999 999);
> 2. Foram eliminados os registros onde a <b>Renda</b> era missing;
> 3. Foram considerados somente os registros das <b>Pessoas de Referência</b> de cada domicílio (responsável pelo domicílio).

***
***

### Utilize a célula abaixo para importar as biblioteca que precisar para executar as tarefas
#### <font color='red'>Sugestões: pandas, numpy, seaborn</font>
"""

import pandas as pd
import numpy as np
import seaborn as sns

"""### Importe o dataset e armazene o conteúdo em uma DataFrame"""

dados = pd.read_csv('dados.csv')

"""### Visualize o conteúdo do DataFrame"""

dados.head(10)

"""### Para avaliarmos o comportamento da variável RENDA vamos construir uma tabela de frequências considerando as seguintes classes em salários mínimos (SM)
#### <font color='blue'>Descreva os pontos mais relevantes que você observa na tabela e no gráfico.</font>

Classes de renda:

<b>A</b> ► Acima de 25 SM

<b>B</b> ► De 15 a 25 SM

<b>C</b> ► De 5 a 15 SM

<b>D</b> ► De 2 a 5 SM

<b>E</b> ► Até 2 SM

Para construir as classes de renda considere que o salário mínimo na época da pesquisa era de <b>R$ 788,00</b>.

#### Siga os passos abaixo:

### 1º Definir os intevalos das classes em reais (R$)
"""

classes = [0, 1576, 3940, 11820, 19700, 200000]

"""### 2º Definir os labels das classes"""

labels = ['E', 'D', 'C', 'B', 'A']

"""### 3º Construir a coluna de frequências"""

frequencia = pd.value_counts(pd.cut(x = dados['Renda'], bins = classes, labels = labels, include_lowest = True))
frequencia

"""### 4º Construir a coluna de percentuais"""

percentual = pd.value_counts(pd.cut(x = dados['Renda'], bins = classes, labels = labels, include_lowest = True), normalize = True) * 100
percentual

"""### 5º Juntar as colunas de frequência e percentuais e ordenar as linhas de acordo com os labels das classes"""

freq_perc_renda = pd.DataFrame({'Frequência': frequencia, 'Percentual': percentual})
freq_perc_renda.sort_index(ascending = False, inplace = True)
freq_perc_renda

"""### Construa um gráfico de barras para visualizar as informações da tabela de frequências acima"""

freq_perc_renda['Frequência'].plot.bar(width = 0.5, figsize = (14, 6), legend = True, rot = 0)

"""> ### Conclusões

A maior parcela da população encontra-se nas classes mais baixas, com destaque para a Classe 'E', com 64,75% da população.

### Crie um histograma para as variáveis QUANTITATIVAS de nosso dataset
#### <font color='blue'>Descreva os pontos mais relevantes que você observa nos gráficos (assimetrias e seus tipos, possíveis causas para determinados comportamentos etc.)</font>
"""

# Idade
h_idade = dados['Idade'].hist(figsize = (14,6), legend = True, bins = 15)
h_idade.set_title('Distribuição de Frenquências - Idade', fontsize = 18)
h_idade.set_xlabel('Anos', fontsize = 14)
h_idade

# Renda, query ('Renda < 15000)
h_renda = dados.query('Renda < 15000')['Renda'].hist(figsize = (14,6), legend = True)
h_renda.set_title('Distribuição de Frenquências - Renda', fontsize = 18)
h_renda.set_xlabel('Reais - R$', fontsize = 14)

# Altura
h_altura = dados['Altura'].hist(figsize = (14,6), legend = True)
h_altura.set_title('Distribuição de Frenquências - Altura', fontsize = 18)
h_altura.set_xlabel('Metros', fontsize = 14)
h_altura

"""> ### Conclusões

- Em relação à Idade, vemos que a maioria dos(as) chefes de família concentram-se em torno dos 40 anos.

- Nota-se, também, que a altura tem uma concentração elevada próximo a 1,7m.

- A maioria das(os) chefes de família tem rendas baixas, concentrando abaixo dos R$ 2.000,00.

### Para a variável RENDA, construa um histograma somente com as informações das pessoas com rendimento até R$ 20.000,00
"""

# Renda, query ('Renda < 20000)
h_renda = dados.query('Renda < 20000')['Renda'].hist(figsize = (14,6), legend = True)
h_renda.set_title('Distribuição de Frenquências - Renda', fontsize = 18)
h_renda.set_xlabel('Reais - R$', fontsize = 14)

"""### Construa uma tabela de frequências e uma com os percentuais do cruzando das variáveis SEXO e COR
#### <font color='blue'>Avalie o resultado da tabela e escreva suas principais conclusões</font>
#### <font color='red'>Utilize os dicionários abaixo para renomear as linha e colunas das tabelas de frequências e dos gráficos em nosso projeto</font>
"""

sexo = {
    0: 'Masculino', 
    1: 'Feminino'
}
cor = {
    0: 'Indígena', 
    2: 'Branca', 
    4: 'Preta', 
    6: 'Amarela', 
    8: 'Parda', 
    9: 'Sem declaração'
}
anos_de_estudo = {
    1: 'Sem instrução e menos de 1 ano', 
    2: '1 ano', 
    3: '2 anos', 
    4: '3 anos', 
    5: '4 anos', 
    6: '5 anos', 
    7: '6 anos', 
    8: '7 anos', 
    9: '8 anos', 
    10: '9 anos', 
    11: '10 anos', 
    12: '11 anos', 
    13: '12 anos', 
    14: '13 anos', 
    15: '14 anos', 
    16: '15 anos ou mais', 
    17: 'Não determinados'
}
uf = {
    11: 'Rondônia', 
    12: 'Acre', 
    13: 'Amazonas', 
    14: 'Roraima', 
    15: 'Pará', 
    16: 'Amapá', 
    17: 'Tocantins', 
    21: 'Maranhão', 
    22: 'Piauí', 
    23: 'Ceará', 
    24: 'Rio Grande do Norte', 
    25: 'Paraíba', 
    26: 'Pernambuco', 
    27: 'Alagoas', 
    28: 'Sergipe', 
    29: 'Bahia', 
    31: 'Minas Gerais', 
    32: 'Espírito Santo', 
    33: 'Rio de Janeiro', 
    35: 'São Paulo', 
    41: 'Paraná', 
    42: 'Santa Catarina', 
    43: 'Rio Grande do Sul', 
    50: 'Mato Grosso do Sul', 
    51: 'Mato Grosso', 
    52: 'Goiás', 
    53: 'Distrito Federal'
}

# crosstab por default constroi uma tabela de frequência entre duas variáveis
freq_sexo_cor = pd.crosstab(dados.Sexo, dados['Cor'])
freq_sexo_cor.rename(index = sexo, inplace=True)
freq_sexo_cor.rename(columns = cor, inplace=True)
freq_sexo_cor = freq_sexo_cor.style.set_table_attributes("style='display:inline'").set_caption("Frequência - Sexo x Cor")

freq_sexo_cor

percnt_sexo_cor = (pd.crosstab(dados.Sexo, dados['Cor'], normalize = True) * 100).round(2)
percnt_sexo_cor.rename(index = sexo, inplace=True)
percnt_sexo_cor.rename(columns = cor, inplace=True)
percnt_sexo_cor = percnt_sexo_cor.style.set_table_attributes("style='display:inline'").set_caption("Percentual - Sexo x Cor")
percnt_sexo_cor

"""> ### Conclusões

- Nota-se uma diferença enorme em relação à quantidade de Homens que são chefes de família. Além disso, mais de 46% das pessoas se consideram Pardas.

## Realize, para a variável RENDA, uma análise descritiva com as ferramentas que aprendemos em nosso treinamento

### Obtenha a média aritimética
"""

dados.Renda.mean()

"""### Obtenha a mediana"""

dados['Renda'].median()

"""### Obtenha a moda"""

dados.Renda.mode()[0]

"""### Obtenha o desvio médio absoluto"""

dados.Renda.mad()

"""### Obtenha a variância"""

dados['Renda'].var()

"""### Obtenha o desvio-padrão"""

dados.Renda.std()

"""### Todos resultados com apenas um método"""

# pode ter vários resultados em um único método
dados.Renda.agg(['mean', 'median', 'count', 'min', 'max', 'std', 'var', 'mad'])

"""### Obtenha a média, mediana e valor máximo da variável RENDA segundo SEXO e COR
#### <font color='blue'>Destaque os pontos mais importante que você observa nas tabulações</font>
#### <font color='red'>O parâmento <i>aggfunc</i> da função <i>crosstab()</i> pode receber uma lista de funções. Exemplo: <i>aggfunc = {'mean', 'median', 'max'}</i></font>
"""

# crosstab por default constroi uma tabela de frequência entre duas variáveis
renda_sexo_cor = pd.crosstab(dados.Cor, dados['Sexo'], aggfunc = {'mean', 'median', 'max'}, values = dados['Renda']).round(2)
renda_sexo_cor.rename(index = cor, inplace=True)
renda_sexo_cor.rename(columns = sexo, inplace=True)
renda_sexo_cor = renda_sexo_cor.style.set_table_attributes("style='display:inline'").set_caption("Máximo, Média e Mediana - Sexo x Cor")

renda_sexo_cor

"""> ### Conclusões

- No geral, os homens chefes de família ganham em média mais que as mulheres.

- Nota-se que a Cor 'Indígena' é a única média que na qual 'Feminino' é maior que a 'Masculino', provavelmente alvancada pelo valor máximo de R$ 120.000,00.

### Obtenha as medidas de dispersão da variável RENDA segundo SEXO e COR
#### <font color='blue'>Destaque os pontos mais importante que você observa nas tabulações</font>
#### <font color='red'>O parâmento <i>aggfunc</i> da função <i>crosstab()</i> pode receber uma lista de funções. Exemplo: <i>aggfunc = {'mad', 'var', 'std'}</i></font>
"""

renda2_sexo_cor = pd.crosstab(dados.Cor, dados['Sexo'], aggfunc = {'var', 'std', 'mad'}, values = dados['Renda']).round(2)
renda2_sexo_cor.rename(index = cor, inplace = True)
renda2_sexo_cor.rename(columns = sexo, inplace = True)
renda2_sexo_cor

"""> ### Conclusões

- Nota-se um desvio absurdo em 'Indígena e Feminino', provavelmente devido ao valor máximo de renda em R$ 120.000,00, que destoa das demais.

- É notório, também, que a dispersão é maior no sexo Masculinio que no Feminino, com exceção do caso citado acima.

- A cor Preta é a que aprenseta a menor dispersão de Renda, enquanto a cor Amarela aprensenta a maior.

### Construa um box plot da variável RENDA segundo SEXO e COR
#### <font color='blue'>É possível verificar algum comportamento diferenciado no rendimento entre os grupos de pessoas analisados? Avalie o gráfico e destaque os pontos mais importantes.</font>
#### <font color='red'>1º - Utilize somente as informações de pessoas com renda abaixo de R$ 10.000</font>
#### <font color='red'>2º - Para incluir uma terceira variável na construção de um boxplot utilize o parâmetro <i>hue</i> e indique a variável que quer incluir na subdivisão.</font>
#### Mais informações: https://seaborn.pydata.org/generated/seaborn.boxplot.html
"""

box_renda = sns.boxplot(x = 'Renda', y = 'Cor', hue = 'Sexo', data=dados.query('Renda < 10000'), orient = 'h')
box_renda.figure.set_size_inches(14, 8)
box_renda.set_title('Renda por Cor e Sexo', fontsize = 18)
box_renda.set_xlabel('Reais - R$', fontsize = 14)
box_renda.set_yticklabels(['Indígena', 'Branca',  'Preta', 'Amarela', 'Parda'])

#destructuring para legenda
handle, labels1 = box_renda.get_legend_handles_labels()
box_renda.legend(handle, ['Masculino', 'Feminino'], fontsize = 12)

box_renda

box_renda = sns.boxplot(x = 'Renda', y = 'Sexo', hue = 'Cor', data=dados.query('Renda < 10000'), orient = 'h')
box_renda.figure.set_size_inches(14, 8)
box_renda.set_title('Renda por Sexo e Cor', fontsize = 18)
box_renda.set_xlabel('Reais - R$', fontsize = 14)
box_renda.set_yticklabels(['Masculino', 'Feminino'])

#destructuring para legenda
handle, labels1 = box_renda.get_legend_handles_labels()
box_renda.legend(handle, ['Indígena', 'Branca',  'Preta', 'Amarela', 'Parda'], fontsize = 12)

box_renda

"""> ### Conclusões

- Nota-se pelos Boxplots que a Renda do Sexo Masculino são maiores que as do Sexo Feminino.

- Também é notório que a Renda das pessoas Brancas e Amarelas são bem maiores que a das pessoas Pretas, Pardas e Indígenas, evidenciando problemas sociais.

# <font color="red">DESAFIO<font>
### Qual percentual de pessoas de nosso <i>dataset</i> ganham um salário mínimo (R$ 788,00) ou menos?
#### <font color='red'>Utilize a função <i>percentileofscore()</i> do <i>scipy</i> para realizar estas análises.</font>
#### Mais informações: https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.percentileofscore.html
"""

from scipy import stats
stats.percentileofscore(dados['Renda'], 788, kind = 'weak')

"""### Qual o valor máximo ganho por 99% das pessoas de nosso <i>dataset</i>?
#### <font color='red'>Utilize o método <i>quantile()</i> do <i>pandas</i> para realizar estas análises.</font>
"""

# 99% ganham abaixo de R$ 15.000,00
dados['Renda'].quantile(.99)

"""### Obtenha a média, mediana, valor máximo e desvio-padrão da variável RENDA segundo ANOS DE ESTUDO e SEXO
#### <font color='blue'>Destaque os pontos mais importante que você observa nas tabulações</font>
#### <font color='red'>O parâmento <i>aggfunc</i> da função <i>crosstab()</i> pode receber uma lista de funções. Exemplo: <i>aggfunc = ['mean', 'median', 'max', 'std']</i></font>
"""

renda_sexo_anos_estudo = pd.crosstab(dados['Anos de Estudo'], dados['Sexo'], aggfunc = {'mean', 'median', 'max', 'std'}, values = dados['Renda']).round(2)
renda_sexo_anos_estudo.rename(index = anos_de_estudo, inplace = True)
renda_sexo_anos_estudo.rename(columns = sexo, inplace = True)
renda_sexo_anos_estudo

"""### Construa um box plot da variável RENDA segundo ANOS DE ESTUDO e SEXO
#### <font color='blue'>É possível verificar algum comportamento diferenciado no rendimento entre os grupos de pessoas analisados? Avalie o gráfico e destaque os pontos mais importantes.</font>
#### <font color='red'>1º - Utilize somente as informações de pessoas com renda abaixo de R$ 10.000</font>
#### <font color='red'>2º - Utilize a variável IDADE para identificar se a desigualdade se verifica para pessoas de mesma idade. Exemplo: <i>data=dados.query('Renda < 10000 and Idade == 40')</i> ou <i>data=dados.query('Renda < 10000 and Idade == 50')</i></font>
#### <font color='red'>3º - Para incluir uma terceira variável na construção de um boxplot utilize o parâmetro <i>hue</i> e indique a variável que quer incluir na subdivisão.</font>
#### Mais informações: https://seaborn.pydata.org/generated/seaborn.boxplot.html
"""

box_renda = sns.boxplot(x = 'Renda', y = 'Anos de Estudo', hue = 'Sexo', data=dados.query('Renda < 10000'), orient = 'h')
box_renda.figure.set_size_inches(16, 10)
box_renda.set_title('Renda por Anos de Estudo e Sexo', fontsize = 18)
box_renda.set_xlabel('Reais - R$', fontsize = 14)
box_renda.set_yticklabels([chave for chave in anos_de_estudo.values()])

# destructuring para legenda
handle, labels1 = box_renda.get_legend_handles_labels()
box_renda.legend(handle, ['Masculino', 'Feminino'], fontsize = 12)

box_renda

box_renda = sns.boxplot(x = 'Renda', y = 'Sexo', hue = 'Anos de Estudo', data=dados.query('Renda < 10000'), orient = 'h')
box_renda.figure.set_size_inches(16, 10)
box_renda.set_title('Renda por Sexo e Anos de Estudo', fontsize = 18)
box_renda.set_xlabel('Reais - R$', fontsize = 14)
box_renda.set_yticklabels(['Masculino', 'Feminino'])

# destructuring para legenda
handle, labels1 = box_renda.get_legend_handles_labels()
box_renda.legend(handle, [chave for chave in anos_de_estudo.values()], fontsize = 12)

box_renda

"""> ### Conclusões

- Nota-se a partir do primeiro gráfico 'Renda por Anos de Estudo e Sexo' que, quanto maior a quantidade de Anos de Estudo, maior a Renda da(o) chefe de família.

- Nota-se, ainda, que a Renda do Sexo Masculino é maior que a do Sexo Feminino. Conclui-se que, em média, homens estatisticamente precisam estudar menos para alcançar a mesma faixa de Renda que mulheres.

### Obtenha a média, mediana, valor máximo e desvio-padrão da variável RENDA segundo as UNIDADES DA FEDERAÇÃO
#### <font color='blue'>Destaque os pontos mais importante que você observa nas tabulações</font>
#### <font color='red'>Utilize o método <i>groupby()</i> do <i>pandas</i> juntamente com o método <i>agg()</i> para contruir a tabulação. O método <i>agg()</i> pode receber um dicionário especificando qual coluna do DataFrame deve ser utilizada e qual lista de funções estatísticas queremos obter, por exemplo: <i>dados.groupby(['UF']).agg({'Renda': ['mean', 'median', 'max', 'std']})</i></font>
"""

group_uf_mmms = dados.groupby(['UF']).agg({'Renda': ['mean', 'median', 'max', 'std']}).round(2)
group_uf_mmms.rename(index = uf, inplace = True)
group_uf_mmms.rename(columns = {'mean': 'Média', 'median': 'Mediana', 'max': 'Renda Máxima', 'std': 'Desvio Padrão'}, inplace = True)
group_uf_mmms

"""### Construa um box plot da variável RENDA segundo as UNIDADES DA FEDERAÇÃO
#### <font color='blue'>É possível verificar algum comportamento diferenciado no rendimento entre os grupos analisados? Avalie o gráfico e destaque os pontos mais importantes.</font>
#### <font color='red'>1º - Utilize somente as informações de pessoas com renda abaixo de R$ 10.000</font>
"""

box_renda = sns.boxplot(x = 'Renda', y = 'UF', data=dados.query('Renda < 10000'), orient = 'h')
box_renda.figure.set_size_inches(14, 8)
box_renda.set_title('Boxplot da Renda por Unidade Federação', fontsize = 18)
box_renda.set_xlabel('Reais - R$', fontsize = 14)
box_renda.set_yticklabels([chave for chave in uf.values()])
# box_renda.set_yticklabels([chave for chave in anos_de_estudo.values()])

"""> ### Conclusões

- Nota-se que o Distrito Federal é a Unidade Federativa que possui consideravelmente a maior Média de Renda;
- O DF também é a UF com a maior dispersão, tem um elevado Desvio Padrão;
- O boxplot plot nos aprenseta uma Assimetria à Direita (Moda < Mediana < Media).

- Os estados do Sul e Sudeste possuem maiores Médias de Renda por chefe de família.

- Enquanto as regiões Norte-Nordeste possuem as menores Médias de Renda, com destaque negativo para Maranhão e Piauí, com as menores Médias de toda a região.
"""