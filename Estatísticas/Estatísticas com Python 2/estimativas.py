# -*- coding: utf-8 -*-
"""Estimativas.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Cm0biPBq3_xq7fDnc7AGQ8VjoxCWSNd_

***
# <font color=green size=10>CURSO DE ESTATÍSTICA - PARTE 2</font>
***

## Trabalho sobre Probabilidades, Amostragem e Estimações

Utilizando os conhecimentos adquiridos em nosso treinamento execute as tarefas abaixo. Siga o roteiro proposto e vá completando as células vazias.

# <font color=green>DATASET DO PROJETO</font>
***

### Pesquisa Nacional por Amostra de Domicílios - 2015

A <b>Pesquisa Nacional por Amostra de Domicílios - PNAD</b> investiga anualmente, de forma permanente, características gerais da população, de educação, trabalho, rendimento e habitação e outras, com periodicidade variável, de acordo com as necessidades de informação para o país, como as características sobre migração, fecundidade, nupcialidade, saúde, segurança alimentar, entre outros temas. O levantamento dessas estatísticas constitui, ao longo dos 49 anos de realização da pesquisa, um importante instrumento para formulação, validação e avaliação de políticas orientadas para o desenvolvimento socioeconômico e a melhoria das condições de vida no Brasil.

### Fonte dos Dados

https://ww2.ibge.gov.br/home/estatistica/populacao/trabalhoerendimento/pnad2015/microdados.shtm

### Variáveis utilizadas

> ### Renda
> ***

Rendimento mensal do trabalho principal para pessoas de 10 anos ou mais de idade.

> ### Idade
> ***

Idade do morador na data de referência em anos.

> ### Altura (elaboração própria)
> ***

Altura do morador em metros.

> ### UF
> ***

|Código|Descrição|
|---|---|
|11|Rondônia|
|12|Acre|
|13|Amazonas|
|14|Roraima|
|15|Pará|
|16|Amapá|
|17|Tocantins|
|21|Maranhão|
|22|Piauí|
|23|Ceará|
|24|Rio Grande do Norte|
|25|Paraíba|
|26|Pernambuco|
|27|Alagoas|
|28|Sergipe|
|29|Bahia|
|31|Minas Gerais|
|32|Espírito Santo|
|33|Rio de Janeiro|
|35|São Paulo|
|41|Paraná|
|42|Santa Catarina|
|43|Rio Grande do Sul|
|50|Mato Grosso do Sul|
|51|Mato Grosso|
|52|Goiás|
|53|Distrito Federal|

> ### Sexo	
> ***

|Código|Descrição|
|---|---|
|0|Masculino|
|1|Feminino|

> ### Anos de Estudo
> ***

|Código|Descrição|
|---|---|
|1|Sem instrução e menos de 1 ano|
|2|1 ano|
|3|2 anos|
|4|3 anos|
|5|4 anos|
|6|5 anos|
|7|6 anos|
|8|7 anos|
|9|8 anos|
|10|9 anos|
|11|10 anos|
|12|11 anos|
|13|12 anos|
|14|13 anos|
|15|14 anos|
|16|15 anos ou mais|
|17|Não determinados| 
||Não aplicável|

> ### Cor
> ***

|Código|Descrição|
|---|---|
|0|Indígena|
|2|Branca|
|4|Preta|
|6|Amarela|
|8|Parda|
|9|Sem declaração|

#### <font color='red'>Observação</font>
***
> Os seguintes tratamentos foram realizados nos dados originais:
> 1. Foram eliminados os registros onde a <b>Renda</b> era inválida (999 999 999 999);
> 2. Foram eliminados os registros onde a <b>Renda</b> era missing;
> 3. Foram considerados somente os registros das <b>Pessoas de Referência</b> de cada domicílio (responsável pelo domicílio).

***
***

### Utilize a célula abaixo para importar as bibliotecas que precisar para executar as tarefas
#### <font color='red'>Sugestões: pandas, numpy, scipy etc.</font>
"""

import pandas as pd

import numpy as np

"""### Importe o dataset e armazene o conteúdo em uma DataFrame"""

dados = pd.read_csv('dados.csv')

"""### Visualize o conteúdo do DataFrame"""

dados

"""# <font color='green'>Problema A</font>

Avaliando nosso dataset é possível verificar que a **proporção de homens** como chefes de domicílios é de quase **70%**. Precisamos **selecionar aleatoriamente grupos de 10 indivíduos** para verificar as diferenças entre os rendimentos em cada grupo. Qual a **probabilidade de selecionamos um grupo que apresente a mesma proporção da população**, ou seja, selecionarmos um grupo que seja **composto por 7 homens e 3 mulheres**?

#### <font color='blue'>Como tarefa extra, verifique a real proporção de homens e mulheres em nosso dataset (vimos como fazer isso em nosso primeiro curso de estatística).</font>

#### <font color='red'>Verifique que tipo de distribuição de probabilidade se encaixa neste experimento.</font>

### Solução
"""

# Problema de Distribuição Binomial
p = 0.7
k = 7
n = 10

# importando 'binom' da biblioteca 'scipy.stats'
from scipy.stats import binom

# cálculo da probabilidade usando .pmf: Probability Mass Function
probabilidade = binom.pmf(k, n, p).round(4) * 100
print('A probabilidade de formamos uma equipe com 7 homens é {}%'.format(probabilidade))

# proporção real entre homens e mulheres
dados['Sexo'].value_counts(normalize = True).round(6) * 100

"""# <font color='green'>Problema B</font>

Ainda sobre a questão anterior, **quantos grupos de 10 indivíduos** nós precisaríamos selecionar, de forma aleatória, para conseguir **100 grupos compostos por 7 homens e 3 mulheres**?

#### <font color='red'>Lembre-se da forma de cálculo da média de uma distribuição binomial</font>

### Solução
"""

# quantos grupos necessários para conseguirmos 100 grupos no formato 7/3
n = 100 / (probabilidade / 100) # dividimos por 100 pois estava em valor percentual
int(n.round())

"""# <font color='green'>Problema C</font>

Um cliente nos encomendou um estudo para avaliar o **rendimento dos chefes de domicílio no Brasil**. Para isso precisamos realizar uma nova coleta de dados, isto é, uma nova pesquisa de campo. Após reunião com o cliente foi possível elencar o seguinte conjunto de informações:

> A. O resultado da pesquisa precisa estar pronto em **2 meses**;

> B. Teremos somente **R$\$$ 150.000,00** de recursos para realização da pesquisa de campo; e
    
> C. Seria interessante uma **margem de erro não superior a 10% em relação a média estimada**.

Em nossa experiência com estudos deste tipo, sabemos que o **custo médio por indivíduo entrevistado fica em torno de R$\$$ 100,00**. Com este conjunto de fatos avalie e obtenha o seguinte conjunto de informações para passar ao cliente:


> 1. Para obter uma estimativa para os parâmetros da população (renda dos chefes de domicílio no Brasil), realize uma amostragem aleatória simples em nosso conjunto de dados. Essa amostra deve conter 200 elementos (utilize random_state = 101 para garantir que o mesmo experimento posso ser realizado novamente). Obtenha a média e o desvio-padrão dessa amostra.
    
> 2. Para a **margem de erro** especificada pelo cliente obtenha os **tamanhos de amostra** necessários para garantir os **níveis de confiança de 90%, 95% e 99%**.
    
> 3. Obtenha o **custo da pesquisa** para os três níveis de confiança.
    
> 4. Para o maior nível de confiança viável (dentro do orçamento disponível), obtenha um **intervalo de confiança para a média da população**.
    
> 5. Assumindo o **nível de confiança escolhido no item anterior**, qual **margem de erro** pode ser considerada utilizando todo o recurso disponibilizado pelo cliente?
    
> 6. Assumindo um **nível de confiança de 95%**, **quanto a pesquisa custaria ao cliente** caso fosse considerada uma **margem de erro de apenas 5%** em relação a média estimada?

# <font color='blue'>Solução do item 1</font>

>1. Para obter uma estimativa para os parâmetros da população (renda dos chefes de domicílio no Brasil), realize uma amostragem aleatória simples em nosso conjunto de dados. Essa amostra deve conter 200 elementos (utilize random_state = 101 para garantir que o mesmo experimento posso ser realizado novamente). Obtenha a média e o desvio-padrão dessa amostra.

### Seleção de uma amostra aleatório simples

#### <font color='red'>Lembre-se de utilizar *random_state = 101*</font>
"""

# amostra da Renda dos dados
amostra = dados.Renda.sample(n = 200, random_state = 101)
amostra.head()

# média da amostra
media_amostra = amostra.mean()
media_amostra

# desvio padrão da amostra, há variáveis que não faz sentido 
dp_amostra = amostra.std()
dp_amostra

"""### Dados do problema

# <font color='blue'>Solução do item 2</font>

>2. Para a margem de erro especificada pelo cliente obtenha os tamanhos de amostra necessários para garantir os níveis de confiança de 90%, 95% e 99%.

### Obtenha a margem de erro

#### <font color='red'>Lembre-se que a margem de erro deve estar na mesma unidade da variável que está sendo estudada (R$)</font>
"""

from scipy.stats import norm

"""### Tamanho da amostra ($1 - \alpha = 90\%$)"""

# z para 90% de nível de confiança
z_90 = norm.ppf(0.5 + (0.9 / 2))
z_90

# tamanho da amostra
e = 0.1 * media_amostra
n_90 = (z_90 * (dp_amostra / e)) ** 2
n_90 = int(n_90.round())
print('A amostra deve conter %s elementos para um nível de confiança de 90%%.' %n_90)

"""### Tamanho da amostra ($1 - \alpha = 95\%$)"""

# z para 95% de nível de confiança
z_95 = norm.ppf(0.5 + (0.95 / 2))
z_95

# tamanho da amostra para 95% de confiança
n_95 = (z_95 * (dp_amostra / e)) ** 2
n_95 = int(n_95.round())
print('A amostra deve conter %s elementos para um nível de confiança de 95%%.' %n_95)

"""### Tamanho da amostra ($1 - \alpha = 99\%$)"""

# z para 99% de nível de confiança
z_99 = norm.ppf(0.5 + (0.99 / 2))
z_99

# tamanho da amostra para 99% de confiança
n_99 = (z_99 * (dp_amostra / e)) ** 2
n_99 = int(n_99.round())
print('A amostra deve conter %s elementos para um nível de confiança de 99%%.' %n_99)

"""# <font color='blue'>Solução do item 3</font>

>3. Obtenha o custo da pesquisa para os três níveis de confiança.

### Custo da pesquisa para o nível de confiança de 90%
"""

# custo estimado para 90% de confiança
custo_90 = n_90 * 100
print('O custo seria de R$ {:,.2f} para 90% de nível de confiança'.format(custo_90))

"""### Custo da pesquisa para o nível de confiança de 95%"""

# custo estimado para 95% de confiança
custo_95 = n_95 * 100
print('O custo seria de R$ {:,.2f} para 95% de nível de confiança'.format(custo_95))

"""### Custo da pesquisa para o nível de confiança de 99%"""

# custo estimado para 99% de confiança
custo_99 = n_99 * 100
print('O custo seria de R$ {:,.2f} para 99% de nível de confiança'.format(custo_99))

"""# <font color='blue'>Solução do item 4</font>

> 4. Para o maior nível de confiança viável (dentro do orçamento disponível), obtenha um intervalo de confiança para a média da população.
"""

# intervalo de confiança para 95%, dentro do orçamento
intervalo_95 = norm.interval(alpha = 0.95, loc = media_amostra, scale = (dp_amostra / np.sqrt(n_95)))
print('O intervalo de confiança de 95% (dentro do orçamento) varia de R$ {:,.2f} a R$ {:,.2f}.'.format(intervalo_95[0], intervalo_95[1]))

"""# <font color='blue'>Solução do item 5</font>

> 5. Assumindo o nível de confiança escolhido no item anterior, qual margem de erro pode ser considerada utilizando todo o recurso disponibilizado pelo cliente?
"""

novo_n_95 = 150000 / 100
novo_n_95

e_novo = z_95 * (dp_amostra / np.sqrt(novo_n_95))
print('O novo erro é de R$ {:.2f}, consumindo todo recurso disponível.'.format(e_novo))

e_percentual = (e_novo / media_amostra) * 100
print('A nova margem de erro é de {:.2f}%.'.format(e_percentual))

"""# <font color='blue'>Solução do item 6</font>

> 6. Assumindo um nível de confiança de 95%, quanto a pesquisa custaria ao cliente caso fosse considerada uma margem de erro de apenas 5% em relação a média estimada?
"""

e_5 = 0.05 * media_amostra
e_5

n_5 = (z_95 * (dp_amostra / e_5)) ** 2
n_5 = int(n_5.round())
n_5

# gasto total
gasto_5 = n_5 * 100
print('Para um nível de confiança de 95% e erro de 5% a pesquisa custaria R${:,.2f}.'.format(gasto_5))