# -*- coding: utf-8 -*-
"""Introdução a Testes Estatísticos.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pb3GwnK6313ms7b0Bce0OtMFaa5ozfD_
"""

import pandas as pd

tmdb = pd.read_csv('tmdb_5000_movies.csv')

tmdb.head()

tmdb.describe()

# distplot / densidade (default)
import seaborn as sns

ax = sns.distplot(tmdb.vote_average)
ax.set(xlabel = 'Nota média', ylabel = 'Densidade')
ax.set_title('Média de votos em filmes no TMDB 5000')
ax

# frequência
ax = sns.distplot(tmdb.vote_average, norm_hist = False, kde = False)
ax.set(xlabel = 'Nota média', ylabel = 'Frequência')
ax.set_title('Média de votos em filmes no TMDB 5000')
ax

sns.boxplot(tmdb.vote_average)

ax = sns.boxplot(tmdb.vote_average)
ax.set(xlabel='Nota  média do filme')
ax.set_title('Distribuição de nota média dos filmes do TMDB 5000')

"""Tem algo estranho nos dados. Não faz sentido filmes com nota média 0 ou 10."""

# apenas os filmes com nota média = 0
tmdb.query('vote_average == 0').head()

# apenas os filmes com nota média = 10
tmdb.query('vote_average == 10')

"""Detectamos que alguns filmes tinham poucos votos ou, até mesmo, nenhum voto."""

# selecionando apenas os filmes com mais de 10 votos
tmdb_com_mais_de_10_votos = tmdb.query('vote_count >= 10')
tmdb_com_mais_de_10_votos.describe()

# frequência dos filmes com mais de 10 votos
ax = sns.distplot(tmdb_com_mais_de_10_votos.vote_average, norm_hist = False, kde = False)
ax.set(xlabel = 'Nota média', ylabel = 'Frequência')
ax.set_title('Média de votos em filmes com 10 ou mais votos no TMDB 5000')
ax

# frequência dos filmes com mais de 10 votos
ax = sns.distplot(tmdb_com_mais_de_10_votos.vote_average)
ax.set(xlabel = 'Nota média', ylabel = 'Densidade')
ax.set_title('Média de votos em filmes com 10 ou mais votos no TMDB 5000')
ax

"""Maneira VISUAL de verificar quantos porcentos dos filmes estão acima ou abaixo de determinada nota:"""

# proproção acumulada de filmes
# frequência dos filmes com mais de 10 votos
ax = sns.distplot(tmdb_com_mais_de_10_votos.vote_average,
                  hist_kws = {'cumulative': True},    # parâmetros extras do matplotlib
                  kde_kws = {'cumulative': True})
ax.set(xlabel = 'Nota média', ylabel = '% acumulada de filmes')
ax.set_title('Média acumulada de votos em filmes com 10 ou mais votos do TMDB 5000')
ax

# boxplot dos filmes com 10 ou mais votos, lembra uma distribuição normal
ax = sns.boxplot(tmdb_com_mais_de_10_votos.vote_average)
ax.set(xlabel='Nota  média do filme')
ax.set_title('Distribuição de nota média dos filmes com 10 ou mais votos do TMDB 5000')

"""# Analisaremos as avaliações do movielens"""

notas = pd.read_csv('ratings.csv')
notas.head()

# calculandos as médias das notas
notas_media_por_filme = notas.groupby('movieId')['rating'].mean()
notas_media_por_filme.head()

# frequência dos filmes 
ax = sns.distplot(notas_media_por_filme.values)
ax.set(xlabel = 'Nota média', ylabel = 'Densidade')
ax.set_title('Média de votos em filmes do Movielens 100k')
ax

# apenas filmes com 10 ou mais votos
quantidade_de_votos_por_filme = notas.groupby('movieId').count()
filmes_com_pelo_menos_10_votos = quantidade_de_votos_por_filme.query('rating >= 10').index
filmes_com_pelo_menos_10_votos

# média dos filmes com 10 votos ou mais
nota_media_dos_filmes_com_pelo_menos_10_votos = notas_media_por_filme.loc[filmes_com_pelo_menos_10_votos.values]
nota_media_dos_filmes_com_pelo_menos_10_votos.head()

# frequência dos filmes com mais de 10 votos
ax = sns.distplot(nota_media_dos_filmes_com_pelo_menos_10_votos.values)
ax.set(xlabel = 'Nota média', ylabel = 'Densidade')
ax.set_title('Média de votos em filmes com 10 ou mais votos do Movielens 100k')
ax

"""Maneira VISUAL de verificar quantos porcentos dos filmes estão acima ou abaixo de determinada nota:"""

# proproção acumulada de filmes
# frequência dos filmes com mais de 10 votos
ax = sns.distplot(nota_media_dos_filmes_com_pelo_menos_10_votos.values,
                  hist_kws = {'cumulative': True},    # parâmetros extras do matplotlib
                  kde_kws = {'cumulative': True})
ax.set(xlabel = 'Nota média', ylabel = '% acumulada de filmes')
ax.set_title('Média acumulada de votos em filmes com 10 ou mais votos do Movielens 100k')
ax

# boxplot dos filmes com 10 ou mais votos, lembra uma distribuição normal
ax = sns.boxplot(nota_media_dos_filmes_com_pelo_menos_10_votos.values)
ax.set(xlabel='Nota  média do filme')
ax.set_title('Distribuição de nota média dos filmes com 10 ou mais votos do Movielens 100k')

"""# Analisando a distribuição dos dados capturados de outros campos do TMDB"""

tmdb_com_mais_de_10_votos.head()

# frequência da quantidade de votos - vote_count
ax = sns.distplot(tmdb_com_mais_de_10_votos.vote_count)
ax.set(xlabel = 'Número de votos', ylabel = 'Densidade')
ax.set_title('Número de votos em filmes com 10 ou mais votos do TMDB 5000')
ax

# orçamento
tmdb.budget

# apenas os filmes com orçamento conhecido (> 0)
tmdb.query('budget > 0').budget

# distribuição do orçamento para os filmes com budget > 0
ax = sns.distplot(tmdb.query('budget > 0').budget)
ax.set(xlabel = 'Gastos (budget)', ylabel = 'Densidade')
ax.set_title('Gastos com filmes do TMDB 5000')
ax

# distribuição da popularidade
ax = sns.distplot(tmdb.popularity)
ax.set(xlabel = 'Popularidade', ylabel = 'Densidade')
ax.set_title('Popularidade de filmes do TMDB 5000')
ax

# distribuição do tempo de duração (runtime)
ax = sns.distplot(tmdb.runtime)
ax.set(xlabel = 'Tempo de duração - minutos', ylabel = 'Densidade')
ax.set_title('Duração de filmes do TMDB 5000')
ax

# excluindo valores nulos do tempo de duração dos filmes
tmdb.runtime.dropna()

# distribuição do tempo de duração sem os nulos
ax = sns.distplot(tmdb.runtime.dropna())
ax.set(xlabel = 'Tempo de duração - minutos', ylabel = 'Densidade')
ax.set_title('Duração de filmes do TMDB 5000')
ax

# retirando os tempos de duração == 0
ax = sns.distplot(tmdb.query('runtime > 0').runtime.dropna())
ax.set(xlabel = 'Tempo de duração - minutos', ylabel = 'Densidade')
ax.set_title('Duração de filmes do TMDB 5000')
ax

# distribuição cumulativa
ax = sns.distplot(tmdb.query('runtime > 0').runtime.dropna(),
                  hist_kws = {'cumulative': True},    # parâmetros extras do matplotlib
                  kde_kws = {'cumulative': True})
ax.set(xlabel = 'Tempo de duração - minutos', ylabel = 'Densidade')
ax.set_title('Duração de filmes do TMDB 5000')
ax

# 80% quantile
print('80% dos filmes tem menos de {} minutos de duração.'.format(tmdb.query('runtime > 0').runtime.dropna().quantile(q = 0.8)))

"""# Movielens: média dos filmes com pelo menos 10 votos."""

print('Média das das notas dos filmes com pelo menos 10 votos:', nota_media_dos_filmes_com_pelo_menos_10_votos.mean())

import matplotlib.pyplot as plt
import numpy as np

# adicionar as médias cumulativas, quantos maior a amostra, mais estável
medias = list()

for i in range(1, len(nota_media_dos_filmes_com_pelo_menos_10_votos)):
  medias.append(nota_media_dos_filmes_com_pelo_menos_10_votos[0:i].mean())

plt.plot(medias)

# modificando a ordem (não sabemos se os dados estão numa ordem específica)
medias = list()

np.random.seed(75243)
temp = nota_media_dos_filmes_com_pelo_menos_10_votos.sample(frac=1)

medias = [temp[0:i].mean() for i in range(1, len(temp))]

plt.plot(medias)

"""Intervalo de confiança com teste Z"""

from statsmodels.stats.weightstats import zconfint

# teste z para intervalo com 95% de confiança (usado em amostras grandes: > 30)
zconfint(nota_media_dos_filmes_com_pelo_menos_10_votos)

from statsmodels.stats.weightstats import DescrStatsW

# cria um objeto do tipo statsmodel, usado no teste T (usado em amostras pequenas: <30)
descr_todos_com_10_votos = DescrStatsW(nota_media_dos_filmes_com_pelo_menos_10_votos)

# teste de intervalo de confiança para 95% de confiança 
descr_todos_com_10_votos.tconfint_mean()

